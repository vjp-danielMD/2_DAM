/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package minibuscaminas;

import javax.swing.*;
import java.awt.*;

/**
 *
 * @author danie
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    private ModeloJuego modelo;
    private BotonCasilla[][] botones;

    /**
     * Creates new form VentanaPrincipal
     */
    public VentanaPrincipal() {
        initComponents();
        iniciarJuegoPorDialogo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelRejilla = new javax.swing.JPanel();
        etiquetaVidas = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout panelRejillaLayout = new javax.swing.GroupLayout(panelRejilla);
        panelRejilla.setLayout(panelRejillaLayout);
        panelRejillaLayout.setHorizontalGroup(
            panelRejillaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        panelRejillaLayout.setVerticalGroup(
            panelRejillaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(131, 131, 131)
                        .addComponent(panelRejilla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(142, 142, 142)
                        .addComponent(etiquetaVidas)))
                .addContainerGap(169, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(etiquetaVidas)
                .addGap(34, 34, 34)
                .addComponent(panelRejilla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(118, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrincipal().setVisible(true);
            }
        });
    }

    private void iniciarJuegoPorDialogo() {
        int n = solicitarTamano();
        int minas = solicitarMinas(n);
        int vidasIniciales = 10;
        modelo = new ModeloJuego(n, minas, vidasIniciales);
        construirRejilla();
        actualizarEtiquetaVidas();
        pack();
        setLocationRelativeTo(null);
    }

    private int solicitarTamano() {
        while (true) {
            String s = JOptionPane.showInputDialog(this, "Introduce el número de columnas (tablero cuadrado):");
            if (s == null) {
                System.exit(0);
            }
            try {
                int v = Integer.parseInt(s.trim());
                if (v > 0 && v <= 30) {
                    return v;
                }
            } catch (NumberFormatException ignored) {
            }
            JOptionPane.showMessageDialog(this, "Introduce un número entero válido entre 1 y 30.");
        }
    }

    private int solicitarMinas(int n) {
        while (true) {
            String s = JOptionPane.showInputDialog(this, "¿Cuántas minas quieres?");
            if (s == null) {
                System.exit(0);
            }
            try {
                int m = Integer.parseInt(s.trim());
                if (m >= 0 && m < n * n) {
                    return m;
                }
            } catch (NumberFormatException ignored) {
            }
            JOptionPane.showMessageDialog(this, "Introduce un número entero válido de minas (menor que " + (n * n) + ").");
        }
    }

    private void construirRejilla() {
        int n = modelo.tamano;
        panelRejilla.removeAll();
        panelRejilla.setLayout(new GridLayout(n, n, 2, 2));
        botones = new BotonCasilla[n][n];
        Dimension tamBtn = new Dimension(Math.max(30, 400 / n), Math.max(30, 400 / n));

        // Creamos el controlador externo
        ControladorCasillas controlador = new ControladorCasillas(this, modelo);

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                BotonCasilla b = new BotonCasilla(i, j);
                b.setPreferredSize(tamBtn);
                b.addMouseListener(controlador); // Se usa el controlador externo
                botones[i][j] = b;
                panelRejilla.add(b);
            }
        }
        panelRejilla.revalidate();
        panelRejilla.repaint();
    }

    private void gestionarClick(BotonCasilla b) {
        int f = b.getFila();
        int c = b.getCol();
        ModeloJuego.ResultadoRevelar res = modelo.revelar(f, c);
        switch (res) {
            case YA_REVELADO:
                return;
            case SEGURO:
                b.marcarSeguro();
                break;
            case MINA_GOLPEADA:
                b.marcarMina();
                break;
            case MINA_FIN:
                b.marcarMina();
                modelo.revelarTodo();
                revelarTodo();
                actualizarEtiquetaVidas();
                JOptionPane.showMessageDialog(this, "Has perdido. Te has quedado sin vidas.");
                return;
            case TODAS_SEGURAS:
                b.marcarSeguro();
                revelarTodo();
                actualizarEtiquetaVidas();
                JOptionPane.showMessageDialog(this, "¡Has ganado! Has encontrado todas las casillas seguras.");
                return;
        }
        actualizarEtiquetaVidas();
    }

    public void actualizarEtiquetaVidas() {
        etiquetaVidas.setText("Vidas: " + modelo.vidas);
    }

    public void revelarTodo() {
        int n = modelo.tamano;
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                BotonCasilla cb = botones[i][j];
                if (modelo.esMina(i, j)) {
                    cb.marcarMina();
                } else {
                    cb.marcarSeguro();
                }
            }
        }
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                botones[i][j].setEnabled(false);
            }
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel etiquetaVidas;
    private javax.swing.JPanel panelRejilla;
    // End of variables declaration//GEN-END:variables
}
